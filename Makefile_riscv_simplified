GCC = riscv32-unknown-elf-gcc
DUMP = riscv32-unknown-elf-objdump
LINK = riscv32-unknown-elf-gcc
COPY = riscv32-unknown-elf-objcopy

SRCDIR = ./src
OBJDIR = ./obj
HEADERDIR = ./src
# BINARY = lorawan_riscv
SOURCES = $(wildcard $(SRCDIR)/*.c)
OBJECTS = $(patsubst $(SRCDIR)/%.c, $(OBJDIR)/%.o, $(SOURCES))

LDSCRIPT = link.riscv.ld
ELFFILE  = lorawan_riscv.elf
DUMPFILE = lorawan_riscv.dump
DUMPCOEFILE = $(addsuffix _dump.coe, $(basename $(DUMPFILE)))
S19FILE  = lorawan_riscv.s19
ICOEFILE = lorawan_riscv_instram.coe
DCOEFILE = lorawan_riscv_dataram.coe
MEMFILE = lorawan_riscv.mem

build: compile link 

compile: $(OBJECTS)
	$(CC) -o $@ $^ 

link: $(ELFFILE)


$(OBJDIR)/%.o: $(SRCDIR)/%.c
	@mkdir -p $(@D)
	$(CC) -c $< -o $@ 

$(ELFFILE): $(OBJECTS)
	$(LINK) -o $(ELFFILE) $(OBJECTS) -T $(LDSCRIPT) -nostartfiles -nostdlib

clean:
	rm -rf lorawan_riscv* obj/*